<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vim | 不停地疯]]></title>
  <link href="http://blog.xeonxu.info/blog/categories/Vim/atom.xml" rel="self"/>
  <link href="http://blog.xeonxu.info/"/>
  <updated>2012-12-16T16:01:48+08:00</updated>
  <id>http://blog.xeonxu.info/</id>
  <author>
    <name><![CDATA[Xeon Xu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vim的简单配置]]></title>
    <link href="http://blog.xeonxu.info/blog/2012/09/22/vim-de-jian-dan-pei-zhi/"/>
    <updated>2012-09-22T21:49:00+08:00</updated>
    <id>http://blog.xeonxu.info/blog/2012/09/22/vim-de-jian-dan-pei-zhi</id>
    <content type="html"><![CDATA[<p>
自己平时喜欢使用<a href="http://www.gnu.org/software/emacs/">GNU Emacs</a>，但是单位工作环境的限制，使我不得不在<a href="http://www.gnu.org/software/screen/">GNU Screen</a>下运行GNU Emacs。但是貌似Screen和Emacs有点小的兼容性问题，至少我没能调整到完全正常。使用中，Emacs经常会上移一行从而造成画面错乱，让人用的很不爽。为此，我决定在工作环境中暂时使用别的编辑器来替代Emacs。之后，我尝试过使用<a href="http://www.emacswiki.org/emacs/MicroEmacs">Micro Emacs</a>，包括Linus最喜欢用的<a href="http://git.kernel.org/?p=editors/uemacs/uemacs.git;a=tree">uEmacs PK</a>，可惜这玩意儿和GNU Emacs差异有点大，加之所有MicroEmacs对多字节语系支持地都不是很好，而自己又是个懒人也不是特别Geek，就没继续用下去。于是我重新将目光放到了<a href="http://www.vim.org">VIM</a> 上。
好在工作中对编辑器的要求不是特别高，VIM也不是特别难使，自己又磕磕碰碰地在网上找了些配置添加到自己的Vim上。用起来还不错，可以交叉索引跳转，可以Outline，对我来说，这就够了。
下面简单列举一下Vim的配置方法，算个存档记录。
</p>
<ul>
<li>Cscope安装配置
<ol>
<li>安装Cscope
     去<a href="http://cscope.sourceforge.net">http://cscope.sourceforge.net</a> 下载cscope源码，然后编译安装。
</li>
<li>在个人目录下的 <code>.vimrc</code> 文件中添加如下配置
</li>
</ol>

</li>
</ul>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>cscope配置  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>“””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””
</span><span class='line'>” cscope setting
</span><span class='line'>“””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””””
</span><span class='line'>” <span class="k">if </span>has<span class="o">(</span>“cscope”<span class="o">)</span>
</span><span class='line'>“   <span class="nb">set </span><span class="nv">csprg</span><span class="o">=</span>/usr/local/bin/cscope
</span><span class='line'>“   <span class="nb">set </span><span class="nv">csto</span><span class="o">=</span>1
</span><span class='line'>“   <span class="nb">set </span>cst
</span><span class='line'>“   <span class="nb">set </span>nocsverb
</span><span class='line'>“   “ add any database in current directory
</span><span class='line'>“   <span class="k">if </span>filereadable<span class="o">(</span>“cscope.out”<span class="o">)</span>
</span><span class='line'>“       cs add cscope.out
</span><span class='line'>“   endif
</span><span class='line'>“   <span class="nb">set </span>csverb
</span><span class='line'>“ endif
</span><span class='line'>“
</span><span class='line'>“ nmap &amp;lt;C-@&amp;gt;s :cs find s &lt;c-r&gt;<span class="o">=</span>expand<span class="o">(</span><span class="s2">&quot;&lt;cword&gt;&quot;</span><span class="o">)</span>&lt;cr&gt;&lt;cr&gt;
</span><span class='line'><span class="s2">&quot; nmap &amp;lt;C-@&amp;gt;g :cs find g &lt;c-r&gt;=expand(&quot;</span>&lt;cword&gt;<span class="s2">&quot;)&lt;cr&gt;&lt;cr&gt;</span>
</span><span class='line'><span class="s2">&quot;</span> nmap &amp;lt;C-@&amp;gt;c :cs find c &lt;c-r&gt;<span class="o">=</span>expand<span class="o">(</span><span class="s2">&quot;&lt;cword&gt;&quot;</span><span class="o">)</span>&lt;cr&gt;&lt;cr&gt;
</span><span class='line'><span class="s2">&quot; nmap &amp;lt;C-@&amp;gt;t :cs find t &lt;c-r&gt;=expand(&quot;</span>&lt;cword&gt;<span class="s2">&quot;)&lt;cr&gt;&lt;cr&gt;</span>
</span><span class='line'><span class="s2">&quot;</span> nmap &amp;lt;C-@&amp;gt;e :cs find e &lt;c-r&gt;<span class="o">=</span>expand<span class="o">(</span><span class="s2">&quot;&lt;cword&gt;&quot;</span><span class="o">)</span>&lt;cr&gt;&lt;cr&gt;
</span><span class='line'><span class="s2">&quot; nmap &amp;lt;C-@&amp;gt;f :cs find f &lt;c-r&gt;=expand(&quot;</span>&lt;cfile&gt;<span class="s2">&quot;)&lt;cr&gt;&lt;cr&gt;</span>
</span><span class='line'><span class="s2">&quot;</span> nmap &amp;lt;C-@&amp;gt;i :cs find i ^&lt;c-r&gt;<span class="o">=</span>expand<span class="o">(</span><span class="s2">&quot;&lt;cfile&gt;&quot;</span><span class="o">)</span>&lt;cr&gt;<span class="nv">$&lt;</span>cr&gt;
</span><span class='line'><span class="s2">&quot; nmap &amp;lt;C-@&amp;gt;d :cs find d &lt;c-r&gt;=expand(&quot;</span>&lt;cword&gt;<span class="s2">&quot;)&lt;cr&gt;&lt;cr&gt;</span>
</span><span class='line'><span class="s2">function! LoadCscope()</span>
</span><span class='line'><span class="s2">let db = findfile(&quot;</span>cscope.out<span class="s2">&quot;, &quot;</span>.;<span class="s2">&quot;)</span>
</span><span class='line'><span class="s2">if (!empty(db))</span>
</span><span class='line'><span class="s2">  let path = strpart(db, 0, match(db, &quot;</span>/cscope.out<span class="s2">$&quot;))</span>
</span><span class='line'><span class="s2">  set nocsverb &quot;</span> suppress <span class="s1">&#39;duplicate connection&#39;</span> error
</span><span class='line'>  <span class="nb">set </span><span class="nv">csto</span><span class="o">=</span>0
</span><span class='line'>  <span class="nb">set </span>cst
</span><span class='line'>  <span class="s2">&quot; add any database in current directory</span>
</span><span class='line'><span class="s2">  if filereadable(db)</span>
</span><span class='line'><span class="s2">     exe &quot;</span>cs add <span class="s2">&quot; . db . &quot;</span> <span class="s2">&quot; . path</span>
</span><span class='line'><span class="s2">     nmap &lt;c-c&gt;s :cs find s &lt;c-r&gt;=expand(&quot;</span>&lt;cword&gt;<span class="s2">&quot;)&lt;cr&gt;&lt;cr&gt;</span>
</span><span class='line'><span class="s2">     nmap &lt;c-c&gt;g :cs find g &lt;c-r&gt;=expand(&quot;</span>&lt;cword&gt;<span class="s2">&quot;)&lt;cr&gt;&lt;cr&gt;</span>
</span><span class='line'><span class="s2">     nmap &lt;c-c&gt;c :cs find c &lt;c-r&gt;=expand(&quot;</span>&lt;cword&gt;<span class="s2">&quot;)&lt;cr&gt;&lt;cr&gt;</span>
</span><span class='line'><span class="s2">     nmap &lt;c-c&gt;t :cs find t &lt;c-r&gt;=expand(&quot;</span>&lt;cword&gt;<span class="s2">&quot;)&lt;cr&gt;&lt;cr&gt;</span>
</span><span class='line'><span class="s2">     nmap &lt;c-c&gt;e :cs find e &lt;c-r&gt;=expand(&quot;</span>&lt;cword&gt;<span class="s2">&quot;)&lt;cr&gt;&lt;cr&gt;</span>
</span><span class='line'><span class="s2">     nmap &lt;c-c&gt;f :cs find f &lt;c-r&gt;=expand(&quot;</span>&lt;cfile&gt;<span class="s2">&quot;)&lt;cr&gt;&lt;cr&gt;</span>
</span><span class='line'><span class="s2">     nmap &lt;c-c&gt;i :cs find i ^&lt;c-r&gt;=expand(&quot;</span>&lt;cfile&gt;<span class="s2">&quot;)&lt;cr&gt;$&lt;cr&gt;</span>
</span><span class='line'><span class="s2">     nmap &lt;c-c&gt;d :cs find d &lt;c-r&gt;=expand(&quot;</span>&lt;cword&gt;<span class="s2">&quot;)&lt;cr&gt;&lt;cr&gt;</span>
</span><span class='line'><span class="s2">  &quot;</span> <span class="k">else </span>add database pointed to by environment
</span><span class='line'>  elseif <span class="nv">$CSCOPE_DB</span> !<span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>     cs add <span class="nv">$CSCOPE_DB</span>
</span><span class='line'>  endif
</span><span class='line'>  <span class="nb">set </span>csverb
</span><span class='line'>endif
</span><span class='line'>endfunction
</span><span class='line'>au BufEnter /* call LoadCscope<span class="o">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></cr></cr></cword></c-r></c-c></cr></cr></cfile></c-r></c-c></cr></cr></cfile></c-r></c-c></cr></cr></cword></c-r></c-c></cr></cr></cword></c-r></c-c></cr></cr></cword></c-r></c-c></cr></cr></cword></c-r></c-c></cr></cr></cword></c-r></c-c></cr></cr></cword></c-r></cr></cr></cfile></c-r></cr></cr></cfile></c-r></cr></cr></cword></c-r></cr></cr></cword></c-r></cr></cr></cword></c-r></cr></cr></cword></c-r></cr></cr></cword></c-r></p>
<ol>
<li>使用时先去要查看的代码目录，然后执行cscope -bqR。完成之后，直接 <code>vi filename</code> 。在需要查找的符号上使用 <code>C-c s/g/c/t/e/f/i/d</code> 即可调用相应的功能。原来cscope插件使用 <code>C-@</code> 做命令引导键，我为了和Emacs同步，将其改为了 <code>C-c</code> 。
</li>
<li>添加Outline显示
</li>
</ol>

<p>  Outline显示由Taglist来实现：
</p>
<ol>
<li>去<a href="http://www.vim.org/scripts/script.php?script_id=273">http://www.vim.org/scripts/script.php?script_id=273</a> 下载Taglist。
</li>
<li>解压后将 <code>taglist.vim</code> 文件放在个人目录下的 <code>.vim/plugin/</code> 目录中。同时，将解压后的 <code>taglist.txt</code> 文件放在个人目录下的 <code>.vim/doc/</code> 目录中。
</li>
<li>最后，添加以下配置到个人目录下的 <code>.vimrc</code> 文件中：
</li>
</ol>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>taglist配置  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>“ use F8 to toggle taglist
</span><span class='line'>nnoremap &lt;silent&gt; &lt;f8&gt; :TlistToggle&lt;cr&gt;
</span><span class='line'><span class="nb">let </span><span class="nv">Tlist_GainFocus_On_ToggleOpen</span><span class="o">=</span>1
</span><span class='line'><span class="nb">let </span><span class="nv">Tlist_Close_On_Select</span><span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure></notextile></div></cr></f8></silent></p>
<p>
  如此便可方便的通过F8按键打开当前文件的Outline，并将光标置于Outline中，选择条目后自动关闭。
</p>
<ul>
<li>设置高亮搜索，自动缩进以及语法高亮
  将以下配置添加到个人目录下的 <code>.vimrc</code> 文件中：
</li>
</ul>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>高亮缩进配置  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">set </span>nu
</span><span class='line'><span class="nb">set </span>hlsearch
</span><span class='line'>syntax <span class="nb">enable</span>
</span><span class='line'><span class="nb">set </span>showmatch
</span><span class='line'><span class="nb">set </span><span class="nv">ts</span><span class="o">=</span>4
</span><span class='line'><span class="nb">set </span><span class="nv">softtabstop</span><span class="o">=</span>4
</span><span class='line'><span class="nb">set </span><span class="nv">shiftwidth</span><span class="o">=</span>4
</span><span class='line'><span class="nb">set </span>expandtab
</span><span class='line'><span class="nb">set </span>autoindent
</span><span class='line'><span class="nb">set </span>cindent
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
OK，如此配置后，查看代码编辑代码舒服多了。
</p>
]]></content>
  </entry>
  
</feed>
